import random
import json
from datetime import datetime, timedelta
from typing import Dict, List, Optional, Any
import sqlite3

class AdvancedContentGenerator:
    """–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ —Å—Ç–∏–ª–µ –ú–∞—Ç—á –¢–í"""
    
    def __init__(self, db_path: str = 'match_tv_bot.db'):
        self.db_path = db_path
        
        # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –≤ —Å—Ç–∏–ª–µ –ú–∞—Ç—á –¢–í
        self.content_templates = {
            'detailed_match_preview': [
                """üéØ –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ú–ê–¢–ß–ê: {home_team} vs {away_team}

üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–°–õ–ï–î–ù–ò–• –í–°–¢–†–ï–ß:
{head_to_head}

üî• –§–û–†–ú–ê –ö–û–ú–ê–ù–î:
{team_form}

‚≠ê –ö–õ–Æ–ß–ï–í–´–ï –ò–ì–†–û–ö–ò:
{key_players}

üìà –ü–†–û–ì–ù–û–ó –≠–ö–°–ü–ï–†–¢–û–í:
{expert_prediction}

üìÖ {match_date} | ‚è∞ {match_time} | üèüÔ∏è {stadium}
üì∫ –ü—Ä—è–º–∞—è —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è: SSC Sport 1

#MatchPreview #SaudiProLeague #Analysis""",
                
                """‚öΩ –ü–†–ï–í–¨–Æ –¢–£–†–ê: {home_team} –ø—Ä–∏–Ω–∏–º–∞–µ—Ç {away_team}

üèÜ –¢–£–†–ù–ò–†–ù–û–ï –ü–û–õ–û–ñ–ï–ù–ò–ï:
‚Ä¢ {home_team}: {home_position} –º–µ—Å—Ç–æ ({home_points} –æ—á–∫–æ–≤)
‚Ä¢ {away_team}: {away_position} –º–µ—Å—Ç–æ ({away_points} –æ—á–∫–æ–≤)

üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ï–ó–û–ù–ê:
{season_stats}

üéØ –ù–ê –ß–¢–û –û–ë–†–ê–¢–ò–¢–¨ –í–ù–ò–ú–ê–ù–ò–ï:
{match_highlights}

üí° –≠–ö–°–ü–ï–†–¢–ù–û–ï –ú–ù–ï–ù–ò–ï:
{expert_opinion}

üìç –ú–µ—Å—Ç–æ: {stadium}
üïê –í—Ä–µ–º—è: {match_time} –ú–°–ö

#FootballAnalysis #SaudiLeague #Preview"""
            ],
            
            'detailed_match_result': [
                """‚öΩ –ü–û–õ–ù–´–ô –û–¢–ß–ï–¢: {home_team} {home_score}:{away_score} {away_team}

üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–ê–¢–ß–ê:
{match_statistics}

‚öΩ –ì–û–õ–´ –ò –ú–û–ú–ï–ù–¢–´:
{goals_timeline}

üü®üü• –î–ò–°–¶–ò–ü–õ–ò–ù–ê:
{cards_info}

üìà –ö–õ–Æ–ß–ï–í–´–ï –ú–û–ú–ï–ù–¢–´:
{key_moments}

üí¨ –ü–û–°–õ–ï–ú–ê–¢–ß–ï–í–´–ï –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò:
{post_match_quotes}

üèÜ –í–õ–ò–Ø–ù–ò–ï –ù–ê –¢–£–†–ù–ò–†–ù–£–Æ –¢–ê–ë–õ–ò–¶–£:
{table_impact}

#MatchReport #SaudiProLeague #FullTime""",
                
                """üèÜ –î–ï–¢–ê–õ–¨–ù–´–ô –†–ê–ó–ë–û–†: {home_team} {home_score}-{away_score} {away_team}

‚ö° –•–†–û–ù–û–õ–û–ì–ò–Ø –°–û–ë–´–¢–ò–ô:
{match_timeline}

üìä –¶–ò–§–†–´ –ú–ê–¢–ß–ê:
{detailed_stats}

üåü –ì–ï–†–û–ô –ú–ê–¢–ß–ê: {man_of_match}
{hero_description}

üìù –¢–ê–ö–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó:
{tactical_analysis}

üéØ –í–´–í–û–î–´:
{conclusions}

#TacticalAnalysis #MatchReview #SaudiFootball"""
            ],
            
            'player_spotlight': [
                """‚≠ê –ó–í–ï–ó–î–ê –ù–ï–î–ï–õ–ò: {player_name} ({team})

üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ï–ó–û–ù–ê:
‚Ä¢ –ú–∞—Ç—á–∏: {matches_played}
‚Ä¢ –ì–æ–ª—ã: {goals}
‚Ä¢ –ü–µ—Ä–µ–¥–∞—á–∏: {assists}
‚Ä¢ –†–µ–π—Ç–∏–Ω–≥: {rating}/10

üî• –ü–û–°–õ–ï–î–ù–ò–ï –í–´–°–¢–£–ü–õ–ï–ù–ò–Ø:
{recent_form}

üí° –ò–ù–¢–ï–†–ï–°–ù–´–ï –§–ê–ö–¢–´:
{player_facts}

üéØ –¶–ò–¢–ê–¢–ê –ò–ì–†–û–ö–ê:
"{player_quote}"

#PlayerSpotlight #SaudiStars #Football""",
                
                """üåü –ü–†–û–§–ò–õ–¨ –ò–ì–†–û–ö–ê: {player_name}

üìà –ö–ê–†–¨–ï–†–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:
{career_stats}

üèÜ –î–û–°–¢–ò–ñ–ï–ù–ò–Ø:
{achievements}

‚öΩ –°–¢–ò–õ–¨ –ò–ì–†–´:
{playing_style}

üì∞ –ü–û–°–õ–ï–î–ù–ò–ï –ù–û–í–û–°–¢–ò:
{recent_news}

#PlayerProfile #SaudiProLeague #Stars"""
            ],
            
            'tactical_analysis': [
                """üß† –¢–ê–ö–¢–ò–ß–ï–°–ö–ò–ô –†–ê–ó–ë–û–†: {match_title}

üìã –°–¢–ê–†–¢–û–í–´–ï –°–û–°–¢–ê–í–´:
{lineups}

üéØ –¢–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –°–•–ï–ú–´:
{formations}

‚ö° –ö–õ–Æ–ß–ï–í–´–ï –¢–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –ú–û–ú–ï–ù–¢–´:
{tactical_moments}

üìä –¢–ï–ü–õ–û–í–´–ï –ö–ê–†–¢–´:
{heat_maps}

üí° –í–´–í–û–î–´ –ê–ù–ê–õ–ò–¢–ò–ö–û–í:
{analyst_conclusions}

#TacticalAnalysis #Football #Strategy""",
                
                """üîç –ì–õ–£–ë–û–ö–ò–ô –ê–ù–ê–õ–ò–ó: {analysis_title}

üìà –°–¢–ê–¢–ò–°–¢–ò–ß–ï–°–ö–ò–ï –¢–†–ï–ù–î–´:
{statistical_trends}

üéØ –°–ò–õ–¨–ù–´–ï –ò –°–õ–ê–ë–´–ï –°–¢–û–†–û–ù–´:
{strengths_weaknesses}

‚öΩ –ò–ì–†–û–í–´–ï –ü–ê–¢–¢–ï–†–ù–´:
{game_patterns}

üîÆ –ü–†–û–ì–ù–û–ó–´ –ù–ê –ë–£–î–£–©–ï–ï:
{future_predictions}

#DeepAnalysis #SaudiFootball #Trends"""
            ],
            
            'transfer_news': [
                """üí∞ –¢–†–ê–ù–°–§–ï–†–ù–´–ï –ù–û–í–û–°–¢–ò: {transfer_title}

üìù –î–ï–¢–ê–õ–ò –°–î–ï–õ–ö–ò:
‚Ä¢ –ò–≥—Ä–æ–∫: {player_name}
‚Ä¢ –ò–∑: {from_club}
‚Ä¢ –í: {to_club}
‚Ä¢ –°—É–º–º–∞: {transfer_fee}
‚Ä¢ –ö–æ–Ω—Ç—Ä–∞–∫—Ç: {contract_length}

üéØ –ê–ù–ê–õ–ò–ó –¢–†–ê–ù–°–§–ï–†–ê:
{transfer_analysis}

üí¨ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò –°–¢–û–†–û–ù:
{official_quotes}

üìä –í–õ–ò–Ø–ù–ò–ï –ù–ê –ö–û–ú–ê–ù–î–£:
{team_impact}

#TransferNews #SaudiProLeague #Signings""",
                
                """üîÑ –¢–†–ê–ù–°–§–ï–†–ù–û–ï –û–ö–ù–û: {window_title}

üìà –ê–ö–¢–ò–í–ù–û–°–¢–¨ –ö–õ–£–ë–û–í:
{club_activity}

‚≠ê –¢–û–ü-–¢–†–ê–ù–°–§–ï–†–´:
{top_transfers}

üí° –≠–ö–°–ü–ï–†–¢–ù–ê–Ø –û–¶–ï–ù–ö–ê:
{expert_evaluation}

üîÆ –û–ñ–ò–î–ê–ï–ú–´–ï –°–î–ï–õ–ö–ò:
{expected_deals}

#TransferWindow #SaudiFootball #Market"""
            ]
        }
        
        # –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.saudi_teams = {
            "–ê–ª—å-–•–∏–ª—è–ª—å": {
                "stadium": "–°—Ç–∞–¥–∏–æ–Ω –ö–æ—Ä–æ–ª—è –§–∞—Ö–¥–∞",
                "founded": 1957,
                "colors": "—Å–∏–Ω–∏–π, –±–µ–ª—ã–π",
                "nickname": "–õ–∏–¥–µ—Ä",
                "achievements": ["14 —Ç–∏—Ç—É–ª–æ–≤ —á–µ–º–ø–∏–æ–Ω–∞", "4 –ö—É–±–∫–∞ –ê–∑–∏–∏"]
            },
            "–ê–ª—å-–ù–∞—Å—Å—Ä": {
                "stadium": "–°—Ç–∞–¥–∏–æ–Ω –ú—Ä—Å—É–ª –ü–∞—Ä–∫",
                "founded": 1955,
                "colors": "–∂–µ–ª—Ç—ã–π, —Å–∏–Ω–∏–π",
                "nickname": "–ì–ª–æ–±–∞–ª—å–Ω—ã–π",
                "achievements": ["9 —Ç–∏—Ç—É–ª–æ–≤ —á–µ–º–ø–∏–æ–Ω–∞", "6 –ö—É–±–∫–æ–≤ –ö–æ—Ä–æ–ª—è"]
            },
            "–ê–ª—å-–ê—Ö–ª–∏": {
                "stadium": "–°—Ç–∞–¥–∏–æ–Ω –ü—Ä–∏–Ω—Ü–∞ –ê–±–¥—É–ª–ª—ã –∞–ª—å-–§–µ–π—Å–∞–ª–∞",
                "founded": 1937,
                "colors": "–∑–µ–ª–µ–Ω—ã–π, –±–µ–ª—ã–π",
                "nickname": "–†—ã—Ü–∞—Ä–∏ –ù–µ–¥–∂–¥–∞",
                "achievements": ["3 —Ç–∏—Ç—É–ª–∞ —á–µ–º–ø–∏–æ–Ω–∞", "13 –ö—É–±–∫–æ–≤ –ö–æ—Ä–æ–ª—è"]
            },
            "–ê–ª—å-–ò—Ç—Ç–∏—Ö–∞–¥": {
                "stadium": "–°—Ç–∞–¥–∏–æ–Ω –ö–æ—Ä–æ–ª—è –ê–±–¥—É–ª–ª—ã",
                "founded": 1927,
                "colors": "–∂–µ–ª—Ç—ã–π, —á–µ—Ä–Ω—ã–π",
                "nickname": "–¢–∏–≥—Ä—ã",
                "achievements": ["8 —Ç–∏—Ç—É–ª–æ–≤ —á–µ–º–ø–∏–æ–Ω–∞", "2 –ö—É–±–∫–∞ –ê–∑–∏–∏"]
            },
            "–ê–ª—å-–®–∞–±–∞–±": {
                "stadium": "–°—Ç–∞–¥–∏–æ–Ω –ü—Ä–∏–Ω—Ü–∞ –§–µ–π—Å–∞–ª–∞ –±–∏–Ω –§–∞—Ö–¥–∞",
                "founded": 1947,
                "colors": "–±–µ–ª—ã–π, —á–µ—Ä–Ω—ã–π",
                "nickname": "–ë–µ–ª—ã–µ",
                "achievements": ["6 —Ç–∏—Ç—É–ª–æ–≤ —á–µ–º–ø–∏–æ–Ω–∞", "5 –ö—É–±–∫–æ–≤ –ö–æ—Ä–æ–ª—è"]
            }
        }
        
        self.player_database = {
            "–ö—Ä–∏—à—Ç–∏–∞–Ω—É –†–æ–Ω–∞–ª–¥—É": {
                "team": "–ê–ª—å-–ù–∞—Å—Å—Ä",
                "position": "–ù–∞–ø–∞–¥–∞—é—â–∏–π",
                "age": 39,
                "nationality": "–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è",
                "goals_season": random.randint(15, 25),
                "assists_season": random.randint(3, 8)
            },
            "–ö–∞—Ä–∏–º –ë–µ–Ω–∑–µ–º–∞": {
                "team": "–ê–ª—å-–ò—Ç—Ç–∏—Ö–∞–¥",
                "position": "–ù–∞–ø–∞–¥–∞—é—â–∏–π", 
                "age": 36,
                "nationality": "–§—Ä–∞–Ω—Ü–∏—è",
                "goals_season": random.randint(12, 20),
                "assists_season": random.randint(5, 10)
            },
            "–ù'–ì–æ–ª–æ –ö–∞–Ω—Ç–µ": {
                "team": "–ê–ª—å-–ò—Ç—Ç–∏—Ö–∞–¥",
                "position": "–ü–æ–ª—É–∑–∞—â–∏—Ç–Ω–∏–∫",
                "age": 33,
                "nationality": "–§—Ä–∞–Ω—Ü–∏—è",
                "goals_season": random.randint(2, 5),
                "assists_season": random.randint(4, 8)
            },
            "–†–∏—è–¥ –ú–∞—Ö—Ä–µ–∑": {
                "team": "–ê–ª—å-–ê—Ö–ª–∏",
                "position": "–ü–æ–ª—É–∑–∞—â–∏—Ç–Ω–∏–∫",
                "age": 33,
                "nationality": "–ê–ª–∂–∏—Ä",
                "goals_season": random.randint(8, 15),
                "assists_season": random.randint(6, 12)
            }
        }

    def generate_detailed_match_preview(self, match_data: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–≤—å—é –º–∞—Ç—á–∞"""
        template = random.choice(self.content_templates['detailed_match_preview'])
        
        home_team = match_data['home_team']
        away_team = match_data['away_team']
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—á–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á
        head_to_head = self._generate_head_to_head(home_team, away_team)
        
        # –§–æ—Ä–º–∞ –∫–æ–º–∞–Ω–¥
        team_form = self._generate_team_form(home_team, away_team)
        
        # –ö–ª—é—á–µ–≤—ã–µ –∏–≥—Ä–æ–∫–∏
        key_players = self._generate_key_players(home_team, away_team)
        
        # –ü—Ä–æ–≥–Ω–æ–∑ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
        expert_prediction = self._generate_expert_prediction(home_team, away_team)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–∑–æ–Ω–∞
        season_stats = self._generate_season_stats(home_team, away_team)
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –º–∞—Ç—á–∞
        match_highlights = self._generate_match_highlights(home_team, away_team)
        
        # –≠–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ –º–Ω–µ–Ω–∏–µ
        expert_opinion = self._generate_expert_opinion(home_team, away_team)
        
        return template.format(
            home_team=home_team,
            away_team=away_team,
            head_to_head=head_to_head,
            team_form=team_form,
            key_players=key_players,
            expert_prediction=expert_prediction,
            season_stats=season_stats,
            match_highlights=match_highlights,
            expert_opinion=expert_opinion,
            match_date=match_data.get('match_date', datetime.now().strftime('%d.%m.%Y')),
            match_time=match_data.get('match_time', '20:00'),
            stadium=match_data.get('stadium', self.saudi_teams.get(home_team, {}).get('stadium', '–°—Ç–∞–¥–∏–æ–Ω')),
            home_position=random.randint(1, 8),
            home_points=random.randint(40, 70),
            away_position=random.randint(1, 8),
            away_points=random.randint(40, 70)
        )

    def generate_detailed_match_result(self, match_data: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ –º–∞—Ç—á–µ"""
        template = random.choice(self.content_templates['detailed_match_result'])
        
        home_team = match_data['home_team']
        away_team = match_data['away_team']
        home_score = match_data.get('home_score', random.randint(0, 4))
        away_score = match_data.get('away_score', random.randint(0, 4))
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Ç—á–∞
        match_statistics = self._generate_match_statistics()
        
        # –•—Ä–æ–Ω–æ–ª–æ–≥–∏—è –≥–æ–ª–æ–≤
        goals_timeline = self._generate_goals_timeline(home_team, away_team, home_score, away_score)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
        cards_info = self._generate_cards_info(home_team, away_team)
        
        # –ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã
        key_moments = self._generate_key_moments(home_team, away_team)
        
        # –ü–æ—Å–ª–µ–º–∞—Ç—á–µ–≤—ã–µ —Ü–∏—Ç–∞—Ç—ã
        post_match_quotes = self._generate_post_match_quotes(home_team, away_team)
        
        # –í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É
        table_impact = self._generate_table_impact(home_team, away_team, home_score, away_score)
        
        # –•—Ä–æ–Ω–æ–ª–æ–≥–∏—è –º–∞—Ç—á–∞
        match_timeline = self._generate_match_timeline(home_team, away_team, home_score, away_score)
        
        # –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        detailed_stats = self._generate_detailed_stats()
        
        # –õ—É—á—à–∏–π –∏–≥—Ä–æ–∫ –º–∞—Ç—á–∞
        man_of_match, hero_description = self._generate_man_of_match(home_team, away_team, home_score, away_score)
        
        # –¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
        tactical_analysis = self._generate_tactical_analysis(home_team, away_team)
        
        # –í—ã–≤–æ–¥—ã
        conclusions = self._generate_match_conclusions(home_team, away_team, home_score, away_score)
        
        return template.format(
            home_team=home_team,
            away_team=away_team,
            home_score=home_score,
            away_score=away_score,
            match_statistics=match_statistics,
            goals_timeline=goals_timeline,
            cards_info=cards_info,
            key_moments=key_moments,
            post_match_quotes=post_match_quotes,
            table_impact=table_impact,
            match_timeline=match_timeline,
            detailed_stats=detailed_stats,
            man_of_match=man_of_match,
            hero_description=hero_description,
            tactical_analysis=tactical_analysis,
            conclusions=conclusions
        )

    def generate_player_spotlight(self, player_name: str = None) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –æ –∑–≤–µ–∑–¥–µ"""
        if not player_name:
            player_name = random.choice(list(self.player_database.keys()))
        
        template = random.choice(self.content_templates['player_spotlight'])
        player_data = self.player_database.get(player_name, {})
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ–∑–æ–Ω–∞
        recent_form = self._generate_player_recent_form(player_name)
        player_facts = self._generate_player_facts(player_name)
        player_quote = self._generate_player_quote(player_name)
        career_stats = self._generate_career_stats(player_name)
        achievements = self._generate_player_achievements(player_name)
        playing_style = self._generate_playing_style(player_name)
        recent_news = self._generate_player_recent_news(player_name)
        
        return template.format(
            player_name=player_name,
            team=player_data.get('team', '–ö–æ–º–∞–Ω–¥–∞'),
            matches_played=random.randint(15, 25),
            goals=player_data.get('goals_season', random.randint(5, 20)),
            assists=player_data.get('assists_season', random.randint(3, 10)),
            rating=round(random.uniform(7.0, 9.5), 1),
            recent_form=recent_form,
            player_facts=player_facts,
            player_quote=player_quote,
            career_stats=career_stats,
            achievements=achievements,
            playing_style=playing_style,
            recent_news=recent_news
        )

    def generate_tactical_analysis(self, match_title: str = None) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
        if not match_title:
            teams = list(self.saudi_teams.keys())
            team1, team2 = random.sample(teams, 2)
            match_title = f"{team1} vs {team2}"
        
        template = random.choice(self.content_templates['tactical_analysis'])
        
        lineups = self._generate_lineups()
        formations = self._generate_formations()
        tactical_moments = self._generate_tactical_moments()
        heat_maps = self._generate_heat_maps_description()
        analyst_conclusions = self._generate_analyst_conclusions()
        
        # –î–ª—è –≤—Ç–æ—Ä–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
        analysis_title = f"–¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–Ω–¥—ã Saudi Pro League"
        statistical_trends = self._generate_statistical_trends()
        strengths_weaknesses = self._generate_strengths_weaknesses()
        game_patterns = self._generate_game_patterns()
        future_predictions = self._generate_future_predictions()
        
        return template.format(
            match_title=match_title,
            lineups=lineups,
            formations=formations,
            tactical_moments=tactical_moments,
            heat_maps=heat_maps,
            analyst_conclusions=analyst_conclusions,
            analysis_title=analysis_title,
            statistical_trends=statistical_trends,
            strengths_weaknesses=strengths_weaknesses,
            game_patterns=game_patterns,
            future_predictions=future_predictions
        )

    def generate_transfer_news(self, transfer_data: Dict = None) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π"""
        template = random.choice(self.content_templates['transfer_news'])
        
        if not transfer_data:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä
            players = ["–ú–∞—Ä—Å–µ–ª–æ –ë—Ä–æ–∑–æ–≤–∏—á", "–§–∞–±–∏–Ω—å–æ", "–°–∞–¥–∏–æ –ú–∞–Ω–µ", "–†–æ–±–µ—Ä—Ç–æ –§–∏—Ä–º–∏–Ω–æ"]
            clubs = list(self.saudi_teams.keys())
            
            transfer_data = {
                'player_name': random.choice(players),
                'from_club': random.choice(["–ò–Ω—Ç–µ—Ä", "–õ–∏–≤–µ—Ä–ø—É–ª—å", "–ë–∞–≤–∞—Ä–∏—è", "–ü–°–ñ"]),
                'to_club': random.choice(clubs),
                'transfer_fee': f"‚Ç¨{random.randint(20, 80)} –º–ª–Ω",
                'contract_length': f"{random.randint(2, 4)} –≥–æ–¥–∞"
            }
        
        transfer_title = f"{transfer_data['player_name']} –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ {transfer_data['to_club']}"
        transfer_analysis = self._generate_transfer_analysis(transfer_data)
        official_quotes = self._generate_official_quotes(transfer_data)
        team_impact = self._generate_team_impact(transfer_data)
        
        # –î–ª—è –æ–∫–Ω–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–æ–≤
        window_title = "–õ–µ—Ç–Ω–µ–µ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω–æ–µ –æ–∫–Ω–æ 2024"
        club_activity = self._generate_club_activity()
        top_transfers = self._generate_top_transfers()
        expert_evaluation = self._generate_expert_evaluation()
        expected_deals = self._generate_expected_deals()
        
        return template.format(
            transfer_title=transfer_title,
            player_name=transfer_data['player_name'],
            from_club=transfer_data['from_club'],
            to_club=transfer_data['to_club'],
            transfer_fee=transfer_data['transfer_fee'],
            contract_length=transfer_data['contract_length'],
            transfer_analysis=transfer_analysis,
            official_quotes=official_quotes,
            team_impact=team_impact,
            window_title=window_title,
            club_activity=club_activity,
            top_transfers=top_transfers,
            expert_evaluation=expert_evaluation,
            expected_deals=expected_deals
        )

    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    
    def _generate_head_to_head(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—á–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á"""
        home_wins = random.randint(2, 6)
        away_wins = random.randint(2, 6)
        draws = random.randint(1, 3)
        total = home_wins + away_wins + draws
        
        return f"""‚Ä¢ –í—Å–µ–≥–æ –≤—Å—Ç—Ä–µ—á: {total}
‚Ä¢ –ü–æ–±–µ–¥—ã {home_team}: {home_wins}
‚Ä¢ –ü–æ–±–µ–¥—ã {away_team}: {away_wins}
‚Ä¢ –ù–∏—á—å–∏: {draws}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –≤—Å—Ç—Ä–µ—á–∞: {home_team} {random.randint(0, 3)}:{random.randint(0, 3)} {away_team}"""

    def _generate_team_form(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –∫–æ–º–∞–Ω–¥"""
        home_form = ''.join(random.choices(['–ü', '–ù', '–ü', '–ü', '–ù'], k=5))
        away_form = ''.join(random.choices(['–ü', '–ù', '–ü', '–ü', '–ù'], k=5))
        
        return f"""‚Ä¢ {home_team}: {' '.join(home_form)} (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –º–∞—Ç—á–µ–π)
‚Ä¢ {away_team}: {' '.join(away_form)} (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –º–∞—Ç—á–µ–π)"""

    def _generate_key_players(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤"""
        home_players = [p for p, data in self.player_database.items() if data.get('team') == home_team]
        away_players = [p for p, data in self.player_database.items() if data.get('team') == away_team]
        
        if not home_players:
            home_players = [f"–ó–≤–µ–∑–¥–∞ {home_team}"]
        if not away_players:
            away_players = [f"–õ–∏–¥–µ—Ä {away_team}"]
        
        home_key = random.choice(home_players)
        away_key = random.choice(away_players)
        
        return f"""‚Ä¢ {home_team}: {home_key} - {random.randint(8, 15)} –≥–æ–ª–æ–≤ –≤ —Å–µ–∑–æ–Ω–µ
‚Ä¢ {away_team}: {away_key} - {random.randint(6, 12)} –≥–æ–ª–æ–≤ + {random.randint(4, 8)} –ø–µ—Ä–µ–¥–∞—á"""

    def _generate_expert_prediction(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤"""
        predictions = [
            f"–û–∂–∏–¥–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç–∞—è –∏–≥—Ä–∞ —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ–º {home_team} –±–ª–∞–≥–æ–¥–∞—Ä—è –ø–æ–¥–¥–µ—Ä–∂–∫–µ —Ç—Ä–∏–±—É–Ω",
            f"–ú–∞—Ç—á –º–æ–∂–µ—Ç —Ä–µ—à–∏—Ç—å—Å—è –≤ –æ–¥–Ω–æ–º —ç–ø–∏–∑–æ–¥–µ - –æ–±–µ –∫–æ–º–∞–Ω–¥—ã –∏–≥—Ä–∞—é—Ç –Ω–∞–¥–µ–∂–Ω–æ –≤ –æ–±–æ—Ä–æ–Ω–µ",
            f"{away_team} —Å–ø–æ—Å–æ–±–Ω–∞ —Å–æ–∑–¥–∞—Ç—å —Å–µ–Ω—Å–∞—Ü–∏—é, –µ—Å–ª–∏ —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Å–≤–æ–∏ –º–æ–º–µ–Ω—Ç—ã",
            f"–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã–π –º–∞—Ç—á - –±–æ–ª–µ–µ 2.5 –≥–æ–ª–æ–≤",
            "–ö–ª—é—á–µ–≤—É—é —Ä–æ–ª—å —Å—ã–≥—Ä–∞–µ—Ç —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è –≤ –æ–±–æ—Ä–æ–Ω–µ"
        ]
        
        return random.choice(predictions)

    def _generate_season_stats(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–µ–∑–æ–Ω–∞"""
        return f"""‚Ä¢ {home_team}: {random.randint(35, 65)} –æ—á–∫–æ–≤, {random.randint(40, 70)} –≥–æ–ª–æ–≤ –∑–∞–±–∏—Ç–æ
‚Ä¢ {away_team}: {random.randint(30, 60)} –æ—á–∫–æ–≤, {random.randint(35, 65)} –≥–æ–ª–æ–≤ –∑–∞–±–∏—Ç–æ"""

    def _generate_match_highlights(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤"""
        highlights = [
            f"–ê—Ç–∞–∫—É—é—â–∞—è –º–æ—â—å {home_team} –ø—Ä–æ—Ç–∏–≤ –Ω–∞–¥–µ–∂–Ω–æ–π –æ–±–æ—Ä–æ–Ω—ã {away_team}",
            "–ü—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Ü–µ–Ω—Ç—Ä–µ –ø–æ–ª—è –±—É–¥–µ—Ç –∫–ª—é—á–µ–≤—ã–º —Ñ–∞–∫—Ç–æ—Ä–æ–º",
            f"–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–Ω—Ç—Ä–∞—Ç–∞–∫–∏ {away_team} –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å —Ä–µ—à–∞—é—â–∏–º–∏",
            "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è - —Å–∏–ª—å–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞ –æ–±–µ–∏—Ö –∫–æ–º–∞–Ω–¥"
        ]
        
        return "‚Ä¢ " + "\n‚Ä¢ ".join(random.sample(highlights, 2))

    def _generate_expert_opinion(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–≥–æ –º–Ω–µ–Ω–∏—è"""
        opinions = [
            f"'{home_team} –∏–º–µ–µ—Ç –≤—Å–µ —à–∞–Ω—Å—ã –≤–∑—è—Ç—å —Ç—Ä–∏ –æ—á–∫–∞ –¥–æ–º–∞, –Ω–æ {away_team} –Ω–µ —Å—Ç–æ–∏—Ç –Ω–µ–¥–æ–æ—Ü–µ–Ω–∏–≤–∞—Ç—å' - –ê—Ö–º–µ–¥ –∞–ª—å-–§–∞—Ä–∞–¥–∂, —ç–∫—Å–ø–µ—Ä—Ç SSC",
            f"'–≠—Ç–æ –º–∞—Ç—á, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –º–Ω–æ–≥–æ–µ —Ä–µ—à–∏—Ç—å –≤ –±–æ—Ä—å–±–µ –∑–∞ —Ç–æ–ø-4' - –ú–æ—Ö–∞–º–º–µ–¥ –∞–ª—å-–û–≤–∞–π—Ä–∞–Ω",
            f"'–û–±–µ –∫–æ–º–∞–Ω–¥—ã –≤ —Ö–æ—Ä–æ—à–µ–π —Ñ–æ—Ä–º–µ, –∂–¥–µ–º –∑—Ä–µ–ª–∏—â–Ω—ã–π —Ñ—É—Ç–±–æ–ª' - –°–∞–ª–µ—Ö –∞–ª—å-–®–µ—Ö—Ä–∏, –±—ã–≤—à–∏–π –∏–≥—Ä–æ–∫ —Å–±–æ—Ä–Ω–æ–π"
        ]
        
        return random.choice(opinions)

    def _generate_match_statistics(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–∞—Ç—á–∞"""
        return f"""‚Ä¢ –í–ª–∞–¥–µ–Ω–∏–µ –º—è—á–æ–º: {random.randint(45, 65)}% - {random.randint(35, 55)}%
‚Ä¢ –£–¥–∞—Ä—ã –ø–æ –≤–æ—Ä–æ—Ç–∞–º: {random.randint(8, 15)} - {random.randint(6, 12)}
‚Ä¢ –£–¥–∞—Ä—ã –≤ —Å—Ç–≤–æ—Ä: {random.randint(3, 8)} - {random.randint(2, 6)}
‚Ä¢ –£–≥–ª–æ–≤—ã–µ: {random.randint(4, 10)} - {random.randint(3, 8)}
‚Ä¢ –§–æ–ª—ã: {random.randint(12, 20)} - {random.randint(10, 18)}"""

    def _generate_goals_timeline(self, home_team: str, away_team: str, home_score: int, away_score: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏ –≥–æ–ª–æ–≤"""
        goals = []
        total_goals = home_score + away_score
        
        if total_goals == 0:
            return "‚Ä¢ –ì–æ–ª–æ–≤ –≤ –º–∞—Ç—á–µ –∑–∞–±–∏—Ç–æ –Ω–µ –±—ã–ª–æ"
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –º–∏–Ω—É—Ç—ã –¥–ª—è –≥–æ–ª–æ–≤
        minutes = sorted(random.sample(range(1, 91), total_goals))
        
        home_goals_left = home_score
        away_goals_left = away_score
        
        for minute in minutes:
            if home_goals_left > 0 and (away_goals_left == 0 or random.choice([True, False])):
                scorer = f"–ò–≥—Ä–æ–∫ {home_team}"
                goals.append(f"‚Ä¢ {minute}' - {scorer} ({home_team})")
                home_goals_left -= 1
            elif away_goals_left > 0:
                scorer = f"–ò–≥—Ä–æ–∫ {away_team}"
                goals.append(f"‚Ä¢ {minute}' - {scorer} ({away_team})")
                away_goals_left -= 1
        
        return "\n".join(goals)

    def _generate_cards_info(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö"""
        yellow_home = random.randint(1, 4)
        yellow_away = random.randint(1, 4)
        red_home = random.randint(0, 1)
        red_away = random.randint(0, 1)
        
        info = f"‚Ä¢ –ñ–µ–ª—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏: {yellow_home} ({home_team}) - {yellow_away} ({away_team})"
        
        if red_home > 0 or red_away > 0:
            info += f"\n‚Ä¢ –ö—Ä–∞—Å–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏: {red_home} ({home_team}) - {red_away} ({away_team})"
        
        return info

    def _generate_key_moments(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤"""
        moments = [
            f"‚Ä¢ {random.randint(15, 30)}' - –û–ø–∞—Å–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–æ—Ä–æ—Ç {away_team}",
            f"‚Ä¢ {random.randint(35, 50)}' - –û—Ç–ª–∏—á–Ω—ã–π —Å–µ–π–≤ –≤—Ä–∞—Ç–∞—Ä—è {home_team}",
            f"‚Ä¢ {random.randint(55, 75)}' - –®—Ç–∞–Ω–≥–∞! –ß—É—Ç—å –Ω–µ –∑–∞–±–∏–ª –∏–≥—Ä–æ–∫ {away_team}",
            f"‚Ä¢ {random.randint(80, 90)}' - –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å {home_team} –≤ –∫–æ–Ω—Ü–æ–≤–∫–µ"
        ]
        
        return "\n".join(random.sample(moments, random.randint(2, 4)))

    def _generate_post_match_quotes(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ–º–∞—Ç—á–µ–≤—ã—Ö —Ü–∏—Ç–∞—Ç"""
        quotes = [
            f"–¢—Ä–µ–Ω–µ—Ä {home_team}: '–ö–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑–∞–ª–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ –±–æ–µ–≤–æ–π –¥—É—Ö'",
            f"–ö–∞–ø–∏—Ç–∞–Ω {away_team}: '–ú—ã –¥–æ–≤–æ–ª—å–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º, –Ω–æ –µ—Å—Ç—å –Ω–∞–¥ —á–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å'",
            "–ì–ª–∞–≤–Ω—ã–π –∞—Ä–±–∏—Ç—Ä: '–ú–∞—Ç—á –ø—Ä–æ—à–µ–ª –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –±–æ—Ä—å–±–µ'"
        ]
        
        return "‚Ä¢ " + "\n‚Ä¢ ".join(random.sample(quotes, 2))

    def _generate_table_impact(self, home_team: str, away_team: str, home_score: int, away_score: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–ª–∏—è–Ω–∏—è –Ω–∞ —Ç—É—Ä–Ω–∏—Ä–Ω—É—é —Ç–∞–±–ª–∏—Ü—É"""
        if home_score > away_score:
            return f"‚Ä¢ {home_team} –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ {random.randint(1, 3)} –ø–æ–∑–∏—Ü–∏—é –≤—ã—à–µ\n‚Ä¢ {away_team} –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ –ø—Ä–µ–∂–Ω–µ–º –º–µ—Å—Ç–µ"
        elif away_score > home_score:
            return f"‚Ä¢ {away_team} –¥–µ–ª–∞–µ—Ç –≤–∞–∂–Ω—ã–π —à–∞–≥ –≤ –±–æ—Ä—å–±–µ –∑–∞ —Ç–æ–ø-4\n‚Ä¢ {home_team} —É–ø—É—Å–∫–∞–µ—Ç —à–∞–Ω—Å —É–ª—É—á—à–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é"
        else:
            return f"‚Ä¢ –û–±–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —Å–≤–æ–∏ –ø–æ–∑–∏—Ü–∏–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ\n‚Ä¢ –û—á–∫–æ –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –≤–∞–∂–Ω—ã–º –≤ –∫–æ–Ω—Ü–æ–≤–∫–µ —Å–µ–∑–æ–Ω–∞"

    def _generate_match_timeline(self, home_team: str, away_team: str, home_score: int, away_score: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏ –º–∞—Ç—á–∞"""
        events = [
            "1' - –ù–∞—á–∞–ª–æ –º–∞—Ç—á–∞",
            f"{random.randint(5, 15)}' - –ü–µ—Ä–≤—ã–π –æ–ø–∞—Å–Ω—ã–π –º–æ–º–µ–Ω—Ç",
            f"{random.randint(20, 35)}' - –ñ–µ–ª—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞",
            "45' - –û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Ç–∞–π–º–∞",
            "46' - –ù–∞—á–∞–ª–æ –≤—Ç–æ—Ä–æ–≥–æ —Ç–∞–π–º–∞",
            f"{random.randint(60, 80)}' - –ó–∞–º–µ–Ω–∞",
            "90' - –û—Å–Ω–æ–≤–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
        ]
        
        return "\n".join(events)

    def _generate_detailed_stats(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        return f"""‚Ä¢ –¢–æ—á–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á: {random.randint(75, 90)}% - {random.randint(70, 85)}%
‚Ä¢ –ï–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞ –≤—ã–∏–≥—Ä–∞–Ω–æ: {random.randint(45, 65)}% - {random.randint(35, 55)}%
‚Ä¢ –û—Ñ—Å–∞–π–¥—ã: {random.randint(2, 6)} - {random.randint(1, 5)}
‚Ä¢ –°–µ–π–≤—ã –≤—Ä–∞—Ç–∞—Ä–µ–π: {random.randint(2, 8)} - {random.randint(3, 7)}"""

    def _generate_man_of_match(self, home_team: str, away_team: str, home_score: int, away_score: int) -> tuple:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ª—É—á—à–µ–≥–æ –∏–≥—Ä–æ–∫–∞ –º–∞—Ç—á–∞"""
        if home_score > away_score:
            team = home_team
        elif away_score > home_score:
            team = away_team
        else:
            team = random.choice([home_team, away_team])
        
        # –ò—â–µ–º –∏–≥—Ä–æ–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        team_players = [p for p, data in self.player_database.items() if data.get('team') == team]
        
        if team_players:
            player = random.choice(team_players)
        else:
            player = f"–ö–∞–ø–∏—Ç–∞–Ω {team}"
        
        description = f"–ü—Ä–æ–≤–µ–ª –±–ª–µ—Å—Ç—è—â–∏–π –º–∞—Ç—á, –ø–æ–∫–∞–∑–∞–≤ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã –≤ –∞—Ç–∞–∫–µ –∏ –æ–±–æ—Ä–æ–Ω–µ. –†–µ–π—Ç–∏–Ω–≥: {random.uniform(8.5, 9.8):.1f}/10"
        
        return player, description

    def _generate_tactical_analysis(self, home_team: str, away_team: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
        formations = ["4-3-3", "4-2-3-1", "3-5-2", "4-4-2"]
        home_formation = random.choice(formations)
        away_formation = random.choice(formations)
        
        return f"""‚Ä¢ {home_team} –∏–≥—Ä–∞–ª–∞ –≤ —Å—Ö–µ–º–µ {home_formation}, –¥–µ–ª–∞—è –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å —Ü–µ–Ω—Ç—Ä–∞ –ø–æ–ª—è
‚Ä¢ {away_team} –≤—ã–±—Ä–∞–ª–∞ {away_formation}, —Å—Ç–∞–≤—è –Ω–∞ –±—ã—Å—Ç—Ä—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –∏–∑ –æ–±–æ—Ä–æ–Ω—ã –≤ –∞—Ç–∞–∫—É
‚Ä¢ –ö–ª—é—á–µ–≤—ã–º —Å—Ç–∞–ª–æ –ø—Ä–æ—Ç–∏–≤–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –∑–æ–Ω–µ"""

    def _generate_match_conclusions(self, home_team: str, away_team: str, home_score: int, away_score: int) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–≤–æ–¥–æ–≤ –ø–æ –º–∞—Ç—á—É"""
        if home_score > away_score:
            return f"‚Ä¢ {home_team} –∑–∞—Å–ª—É–∂–µ–Ω–Ω–æ –≤–∑—è–ª–∞ —Ç—Ä–∏ –æ—á–∫–∞ –±–ª–∞–≥–æ–¥–∞—Ä—è –±–æ–ª–µ–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä–µ\n‚Ä¢ {away_team} –ø–æ–∫–∞–∑–∞–ª–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä, –Ω–æ –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏"
        elif away_score > home_score:
            return f"‚Ä¢ {away_team} –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∞ –æ—Ç–ª–∏—á–Ω—É—é –∏–≥—Ä—É –≤ –≥–æ—Å—Ç—è—Ö\n‚Ä¢ {home_team} –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –≤ –∞—Ç–∞–∫–µ"
        else:
            return f"‚Ä¢ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –æ–±–µ –∫–æ–º–∞–Ω–¥—ã –∏–º–µ–ª–∏ —Å–≤–æ–∏ –º–æ–º–µ–Ω—Ç—ã\n‚Ä¢ –ù–∏—á—å—è —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –±–æ–ª—å—à–µ {away_team} –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏"

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...
    
    def _generate_player_recent_form(self, player_name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ñ–æ—Ä–º—ã –∏–≥—Ä–æ–∫–∞"""
        matches = []
        for i in range(5):
            rating = random.uniform(6.5, 9.0)
            performance = "–æ—Ç–ª–∏—á–Ω–æ" if rating >= 8.0 else "—Ö–æ—Ä–æ—à–æ" if rating >= 7.0 else "—Å—Ä–µ–¥–Ω–µ"
            matches.append(f"‚Ä¢ –ú–∞—Ç—á {i+1}: {rating:.1f}/10 ({performance})")
        
        return "\n".join(matches)

    def _generate_player_facts(self, player_name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤ –æ–± –∏–≥—Ä–æ–∫–µ"""
        facts = [
            f"‚Ä¢ {player_name} –∑–∞–±–∏–ª —É–∂–µ {random.randint(3, 8)} –≥–æ–ª–æ–≤ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 –º–∞—Ç—á–∞—Ö",
            f"‚Ä¢ –ü—Ä–æ–≤–µ–ª {random.randint(90, 99)}% —Ç–æ—á–Ω—ã—Ö –ø–µ—Ä–µ–¥–∞—á –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä–µ",
            f"‚Ä¢ –°—Ç–∞–ª {random.randint(2, 5)}-–º –∏–≥—Ä–æ–∫–æ–º –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∫–ª—É–±–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≥–æ–ª–æ–≤ –∑–∞ —Å–µ–∑–æ–Ω",
            f"‚Ä¢ –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏–ª –Ω–∏ –æ–¥–Ω–æ–≥–æ –º–∞—Ç—á–∞ –≤ —Ç–µ–∫—É—â–µ–º —Å–µ–∑–æ–Ω–µ"
        ]
        
        return "\n".join(random.sample(facts, 2))

    def _generate_player_quote(self, player_name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ü–∏—Ç–∞—Ç—ã –∏–≥—Ä–æ–∫–∞"""
        quotes = [
            "–Ø —Å—á–∞—Å—Ç–ª–∏–≤ –∏–≥—Ä–∞—Ç—å –≤ Saudi Pro League. –£—Ä–æ–≤–µ–Ω—å –∑–¥–µ—Å—å –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π",
            "–ö–æ–º–∞–Ω–¥–∞ - —ç—Ç–æ –≥–ª–∞–≤–Ω–æ–µ. –ú–æ–∏ –≥–æ–ª—ã –ø–æ–º–æ–≥–∞—é—Ç –Ω–∞–º –ø–æ–±–µ–∂–¥–∞—Ç—å",
            "–ö–∞–∂–¥—ã–π –º–∞—Ç—á –¥–ª—è –Ω–∞—Å –∫–∞–∫ —Ñ–∏–Ω–∞–ª. –ú—ã –∏–≥—Ä–∞–µ–º –∑–∞ –Ω–∞—à–∏—Ö –±–æ–ª–µ–ª—å—â–∏–∫–æ–≤",
            "–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –æ—Ç–ª–∏—á–Ω–æ. –Ø —á—É–≤—Å—Ç–≤—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤—Å–µ–≥–æ –∫–ª—É–±–∞"
        ]
        
        return random.choice(quotes)

    def _generate_career_stats(self, player_name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—å–µ—Ä–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        return f"""‚Ä¢ –ú–∞—Ç—á–∏ –≤ –∫–∞—Ä—å–µ—Ä–µ: {random.randint(400, 800)}
‚Ä¢ –ì–æ–ª—ã –≤ –∫–∞—Ä—å–µ—Ä–µ: {random.randint(150, 400)}
‚Ä¢ –ü–µ—Ä–µ–¥–∞—á–∏ –≤ –∫–∞—Ä—å–µ—Ä–µ: {random.randint(80, 200)}
‚Ä¢ –ö–ª—É–±—ã –≤ –∫–∞—Ä—å–µ—Ä–µ: {random.randint(3, 8)}"""

    def _generate_player_achievements(self, player_name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –∏–≥—Ä–æ–∫–∞"""
        achievements = [
            "‚Ä¢ 5x –ß–µ–º–ø–∏–æ–Ω –ï–≤—Ä–æ–ø—ã —Å –∫–ª—É–±–æ–º",
            "‚Ä¢ –õ—É—á—à–∏–π –±–æ–º–±–∞—Ä–¥–∏—Ä –õ–∏–≥–∏ –ß–µ–º–ø–∏–æ–Ω–æ–≤ (2018)",
            "‚Ä¢ –ó–æ–ª–æ—Ç–æ–π –º—è—á (2017)",
            "‚Ä¢ –ß–µ–º–ø–∏–æ–Ω –º–∏—Ä–∞ (2018)",
            "‚Ä¢ 3x –ò–≥—Ä–æ–∫ –≥–æ–¥–∞ –≤ –ª–∏–≥–µ"
        ]
        
        return "\n".join(random.sample(achievements, 3))

    def _generate_playing_style(self, player_name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —Å—Ç–∏–ª—è –∏–≥—Ä—ã"""
        styles = [
            "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –Ω–∞–ø–∞–¥–∞—é—â–∏–π —Å –æ—Ç–ª–∏—á–Ω—ã–º —É–¥–∞—Ä–æ–º –æ–±–µ–∏–º–∏ –Ω–æ–≥–∞–º–∏",
            "–¢–µ—Ö–Ω–∏—á–Ω—ã–π –ø–æ–ª—É–∑–∞—â–∏—Ç–Ω–∏–∫, –º–∞—Å—Ç–µ—Ä —Ç–æ—á–Ω—ã—Ö –ø–µ—Ä–µ–¥–∞—á",
            "–ë—ã—Å—Ç—Ä—ã–π –≤–∏–Ω–≥–µ—Ä —Å —Ö–æ—Ä–æ—à–∏–º –¥—Ä–∏–±–ª–∏–Ω–≥–æ–º",
            "–ù–∞–¥–µ–∂–Ω—ã–π –∑–∞—â–∏—Ç–Ω–∏–∫ —Å –ª–∏–¥–µ—Ä—Å–∫–∏–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞–º–∏"
        ]
        
        return random.choice(styles)

    def _generate_player_recent_news(self, player_name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –æ–± –∏–≥—Ä–æ–∫–µ"""
        news = [
            f"‚Ä¢ {player_name} –ø—Ä–æ–¥–ª–∏–ª –∫–æ–Ω—Ç—Ä–∞–∫—Ç —Å –∫–ª—É–±–æ–º –¥–æ 2026 –≥–æ–¥–∞",
            f"‚Ä¢ –ü–æ–ª—É—á–∏–ª –≤—ã–∑–æ–≤ –≤ —Å–±–æ—Ä–Ω—É—é –Ω–∞ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –º–∞—Ç—á–∏",
            f"‚Ä¢ –°—Ç–∞–ª –∫–∞–ø–∏—Ç–∞–Ω–æ–º –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Ç–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω",
            f"‚Ä¢ –ù–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ –∑–≤–∞–Ω–∏–µ –ª—É—á—à–µ–≥–æ –∏–≥—Ä–æ–∫–∞ –º–µ—Å—è—Ü–∞"
        ]
        
        return "\n".join(random.sample(news, 2))

    # –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ç–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
    
    def _generate_lineups(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö —Å–æ—Å—Ç–∞–≤–æ–≤"""
        formations = ["4-3-3", "4-2-3-1", "3-5-2"]
        return f"""‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ 1: {random.choice(formations)}
‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ 2: {random.choice(formations)}
‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–Ω–∞ –≤ –æ—Å–Ω–æ–≤—É"""

    def _generate_formations(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º"""
        return """‚Ä¢ –î–æ–º–∞—à–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ –¥–µ–ª–∞–ª–∞ –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å –º—è—á–∞ —á–µ—Ä–µ–∑ —Ü–µ–Ω—Ç—Ä
‚Ä¢ –ì–æ—Å—Ç–∏ —Å—Ç–∞–≤–∏–ª–∏ –Ω–∞ –±—ã—Å—Ç—Ä—ã–µ –∫–æ–Ω—Ç—Ä–∞—Ç–∞–∫–∏ –ø–æ —Ñ–ª–∞–Ω–≥–∞–º
‚Ä¢ –û–±–µ –∫–æ–º–∞–Ω–¥—ã –∞–∫—Ç–∏–≤–Ω–æ –ø—Ä–µ—Å—Å–∏–Ω–≥–æ–≤–∞–ª–∏ –≤ —á—É–∂–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ –ø–æ–ª—è"""

    def _generate_tactical_moments(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤"""
        return """‚Ä¢ 23' - –°–º–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏–π –≤ –∞—Ç–∞–∫–µ –ø—Ä–∏–Ω–µ—Å–ª–∞ –ø–µ—Ä–≤—ã–π –æ–ø–∞—Å–Ω—ã–π –º–æ–º–µ–Ω—Ç
‚Ä¢ 56' - –¢–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–º–µ–Ω–∞ –∏–∑–º–µ–Ω–∏–ª–∞ –±–∞–ª–∞–Ω—Å –≤ —Ü–µ–Ω—Ç—Ä–µ –ø–æ–ª—è
‚Ä¢ 78' - –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ö–µ–º—É —Å —Ç—Ä–µ–º—è —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–º–∏ –∑–∞—â–∏—Ç–Ω–∏–∫–∞–º–∏"""

    def _generate_heat_maps_description(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —Ç–µ–ø–ª–æ–≤—ã—Ö –∫–∞—Ä—Ç"""
        return """‚Ä¢ –û—Å–Ω–æ–≤–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–æ–º–∞—à–Ω–µ–π –∫–æ–º–∞–Ω–¥—ã - –ª–µ–≤—ã–π —Ñ–ª–∞–Ω–≥ (65% –∞—Ç–∞–∫)
‚Ä¢ –ì–æ—Å—Ç–∏ —á–∞—â–µ –∞—Ç–∞–∫–æ–≤–∞–ª–∏ —á–µ—Ä–µ–∑ —Ü–µ–Ω—Ç—Ä (70% –≤–ª–∞–¥–µ–Ω–∏—è –≤ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –∑–æ–Ω–µ)
‚Ä¢ –ó–æ–Ω—ã –Ω–∞–∏–±–æ–ª—å—à–µ–π –±–æ—Ä—å–±—ã - —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫—Ä—É–≥ –∏ —à—Ç—Ä–∞—Ñ–Ω—ã–µ –ø–ª–æ—â–∞–¥–∏"""

    def _generate_analyst_conclusions(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–≤–æ–¥–æ–≤ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤"""
        return """‚Ä¢ –¢–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ —Å—Ç–∞–ª–∞ –∫–ª—é—á–µ–≤—ã–º —Ñ–∞–∫—Ç–æ—Ä–æ–º
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ —Ä–µ—à–∏–ª–æ –∏—Å—Ö–æ–¥ –º–∞—Ç—á–∞
‚Ä¢ –§–∏–∑–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∑–≤–æ–ª–∏–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–º–ø –¥–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–≤–∏—Å—Ç–∫–∞"""

    # –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
    
    def _generate_transfer_analysis(self, transfer_data: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞"""
        return f"""{transfer_data['player_name']} –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É—Å–∏–ª–∏—Ç –∞—Ç–∞–∫—É—é—â—É—é –ª–∏–Ω–∏—é {transfer_data['to_club']}. 
–ï–≥–æ –æ–ø—ã—Ç –∏–≥—Ä—ã –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ –∏ –ª–∏–¥–µ—Ä—Å–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –ø–æ–º–æ–≥—É—Ç –∫–æ–º–∞–Ω–¥–µ –≤ –±–æ—Ä—å–±–µ –∑–∞ —Ç–∏—Ç—É–ª.
–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–º–±–∏—Ü–∏–∏ –∫–ª—É–±–∞ –∏ –∂–µ–ª–∞–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–∏—Ä–æ–≤–∞—Ç—å —Å —Ç–æ–ø-–∫–æ–º–∞–Ω–¥–∞–º–∏ –ª–∏–≥–∏."""

    def _generate_official_quotes(self, transfer_data: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —Ü–∏—Ç–∞—Ç"""
        return f"""‚Ä¢ –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç {transfer_data['to_club']}: "–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ –Ω–∞—à–µ–π —Å–µ–º—å–µ"
‚Ä¢ {transfer_data['player_name']}: "–≠—Ç–æ –Ω–æ–≤—ã–π –≤—ã–∑–æ–≤ –≤ –º–æ–µ–π –∫–∞—Ä—å–µ—Ä–µ, –≥–æ—Ç–æ–≤ –¥–∞—Ç—å –≤—Å–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã"
‚Ä¢ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä: "–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—à–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–∞–∑–≤–∏—Ç–∏—è" """

    def _generate_team_impact(self, transfer_data: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–ª–∏—è–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É"""
        return f"""‚Ä¢ –£—Å–∏–ª–µ–Ω–∏–µ –∞—Ç–∞–∫—É—é—â–µ–π –ª–∏–Ω–∏–∏ –Ω–∞ 30-40%
‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏ –≤ —Å–æ—Å—Ç–∞–≤–µ
‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–ø—ã—Ç –¥–ª—è –º–æ–ª–æ–¥—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –†–æ—Å—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ {transfer_data['to_club']}"""

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    
    def _generate_statistical_trends(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–µ–Ω–¥–æ–≤"""
        return """‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ–≤ –∑–∞ –º–∞—Ç—á –≤—ã—Ä–æ—Å–ª–æ –¥–æ 2.8 (–±—ã–ª–æ 2.4)
‚Ä¢ 65% –∫–æ–º–∞–Ω–¥ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç —Å—Ö–µ–º—É 4-3-3
‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–æ–ª–æ–∂–µ–Ω–∏–π —É–≤–µ–ª–∏—á–∏–ª–∞—Å—å –Ω–∞ 15%"""

    def _generate_strengths_weaknesses(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–ª—å–Ω—ã—Ö –∏ —Å–ª–∞–±—ã—Ö —Å—Ç–æ—Ä–æ–Ω"""
        return """–°–ò–õ–¨–ù–´–ï –°–¢–û–†–û–ù–´:
‚Ä¢ –í—ã—Å–æ–∫–∏–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –û—Ç–ª–∏—á–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞
‚Ä¢ –¢–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞

–°–õ–ê–ë–´–ï –°–¢–û–†–û–ù–´:
‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –æ–ø—ã—Ç–∞ —É –º–æ–ª–æ–¥—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π –º–æ–º–µ–Ω—Ç–æ–≤
‚Ä¢ –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –≤ –æ–±–æ—Ä–æ–Ω–µ –ø—Ä–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞—Ö"""

    def _generate_game_patterns(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–≤—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤"""
        return """‚Ä¢ 70% –∞—Ç–∞–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–æ—Ä–æ—Ç–∫–∏—Ö –ø–µ—Ä–µ–¥–∞—á –æ—Ç –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤
‚Ä¢ –°—Ä–µ–¥–Ω—è—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–ª–∞–¥–µ–Ω–∏—è –º—è—á–æ–º - 18 —Å–µ–∫—É–Ω–¥
‚Ä¢ –ù–∞–∏–±–æ–ª–µ–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è - 60-75 –º–∏–Ω—É—Ç—ã –º–∞—Ç—á–∞"""

    def _generate_future_predictions(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –Ω–∞ –±—É–¥—É—â–µ–µ"""
        return """‚Ä¢ –û–∂–∏–¥–∞–µ—Ç—Å—è —Ä–æ—Å—Ç –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏ –≤ —Ç–æ–ø-4
‚Ä¢ –ú–æ–ª–æ–¥—ã–µ —Å–∞—É–¥–æ–≤—Å–∫–∏–µ —Ç–∞–ª–∞–Ω—Ç—ã –ø–æ–ª—É—á–∞—Ç –±–æ–ª—å—à–µ –∏–≥—Ä–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –¢–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ö–µ–º—ã —Å—Ç–∞–Ω—É—Ç –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º–∏ –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º–∏"""

    def _generate_club_activity(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–ª—É–±–æ–≤"""
        return """‚Ä¢ –ê–ª—å-–•–∏–ª—è–ª—å: 3 –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–∞, –±—é–¥–∂–µ—Ç ‚Ç¨120 –º–ª–Ω
‚Ä¢ –ê–ª—å-–ù–∞—Å—Å—Ä: 2 –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è, —Ñ–æ–∫—É—Å –Ω–∞ –º–æ–ª–æ–¥—ã—Ö —Ç–∞–ª–∞–Ω—Ç–∞—Ö  
‚Ä¢ –ê–ª—å-–ò—Ç—Ç–∏—Ö–∞–¥: –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞—â–∏—Ç–Ω–∏–∫–∞
‚Ä¢ –ê–ª—å-–ê—Ö–ª–∏: —Ä–∞–±–æ—Ç–∞ —Å –∞–≥–µ–Ω—Ç–∞–º–∏ –ø–æ –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–º –∏–≥—Ä–æ–∫–∞–º"""

    def _generate_top_transfers(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–ø-—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–æ–≤"""
        return """1. –ö—Ä–∏—à—Ç–∏–∞–Ω—É –†–æ–Ω–∞–ª–¥—É ‚Üí –ê–ª—å-–ù–∞—Å—Å—Ä (‚Ç¨200 –º–ª–Ω)
2. –ö–∞—Ä–∏–º –ë–µ–Ω–∑–µ–º–∞ ‚Üí –ê–ª—å-–ò—Ç—Ç–∏—Ö–∞–¥ (‚Ç¨100 –º–ª–Ω)
3. –ù'–ì–æ–ª–æ –ö–∞–Ω—Ç–µ ‚Üí –ê–ª—å-–ò—Ç—Ç–∏—Ö–∞–¥ (‚Ç¨100 –º–ª–Ω)
4. –†–∏—è–¥ –ú–∞—Ö—Ä–µ–∑ ‚Üí –ê–ª—å-–ê—Ö–ª–∏ (‚Ç¨60 –º–ª–Ω)"""

    def _generate_expert_evaluation(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–π –æ—Ü–µ–Ω–∫–∏"""
        return """–≠–∫—Å–ø–µ—Ä—Ç—ã –æ—Ç–º–µ—á–∞—é—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç —É—Ä–æ–≤–Ω—è –ª–∏–≥–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è –ø—Ä–∏—Ö–æ–¥—É –∑–≤–µ–∑–¥–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤.
–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –º–æ–ª–æ–¥–µ–∂–Ω—ã–µ –∞–∫–∞–¥–µ–º–∏–∏ –¥–∞—é—Ç –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç.
Saudi Pro League —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ–¥–Ω–æ–π –∏–∑ —Å–∞–º—ã—Ö –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö –ª–∏–≥ –≤ —Ä–µ–≥–∏–æ–Ω–µ."""

    def _generate_expected_deals(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–∂–∏–¥–∞–µ–º—ã—Ö —Å–¥–µ–ª–æ–∫"""
        return """‚Ä¢ –õ—É–∫–∞ –ú–æ–¥—Ä–∏—á ‚Üí –≤–æ–∑–º–æ–∂–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –≤ Saudi Pro League
‚Ä¢ –°–µ—Ä—Ö–∏–æ –†–∞–º–æ—Å ‚Üí –≤–µ–¥—É—Ç—Å—è –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–ª—É–±–∞–º–∏
‚Ä¢ –°–∞–¥–∏–æ –ú–∞–Ω–µ ‚Üí –∏–Ω—Ç–µ—Ä–µ—Å —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ê–ª—å-–ù–∞—Å—Å—Ä
‚Ä¢ –†–æ–±–µ—Ä—Ç–æ –§–∏—Ä–º–∏–Ω–æ ‚Üí –Ω–∞ —Ä–∞–¥–∞—Ä–µ —É –ê–ª—å-–ê—Ö–ª–∏"""

